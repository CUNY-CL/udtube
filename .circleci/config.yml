version: 2.1

jobs:
  pre-build:
    description: A check that needs to be done on only one supported Python version
    parameters:
      command-run:
        type: string
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - run:
          command: poetry install --with=dev,test
      - run:
          command: << parameters.command-run >>

  build-python:
    parameters:
      python-version:
        type: string
    docker:
      - image: cimg/python:<< parameters.python-version >>
        #auth:
        #  username: $DOCKERHUB_USERNAME
        #  password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Build source distribution and install package from it
          command: |
              poetry lock --no-update && \
              poetry install --with=dev,test && \
              poetry build && \
              pip install dist/$(ls dist/ | grep .whl)
      - run:
          name: Show installed Python packages
          command: poetry show
      - run:
          name: Run tests
          command: |
              poetry run pytest -vv -k "not test_model_1_ru" tests --junitxml /tmp/testxml/report.xml
      - store_test_results:
          path: /tmp/testxml/report.xml

workflows:
  version: 2
  build:
    jobs:
      - pre-build:
          name: black
          command-run: poetry run black --line-length 79 --check .
      - pre-build:
          name: flake8
          command-run: poetry run flake8 --ignore E203,W503 .
      - pre-build:
          name: twine
          command-run: |
            poetry build && \
            poetry run twine check dist/`ls dist/ | grep .tar.gz` && \
            poetry run twine check dist/`ls dist/ | grep .whl`
      - build-python:
          requires:
            - black
            - flake8
            - twine
          matrix:
            parameters:
              python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
