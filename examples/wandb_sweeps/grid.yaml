method: random
metric:
  name: val_loss
  goal: minimize
parameters:
  model.dropout:
    distribution: uniform
    min: 0
    max: 0.5
  model.encoder:
    values:
      - google-bert/bert-base-multilingual-cased
      - FacebookAI/xlm-roberta-base
      - DeepPavlov/rubert-base-cased
  model.pooling_layers:
    distribution: q_uniform
    q: 1
    min: 1
    max: 8
  encoder_optimizer.lr:
    distribution: log_uniform_values
    min: 1e-06
    max: 0.001
  encoder_optimizer.beta1:
    distribution: uniform
    min: 0.8
    max: 0.999
  encoder_optimizer.beta2:
    distribution: uniform
    min: 0.98
    max: 0.999
  encoder_scheduler.warmup_epochs:
    distribution: uniform
    min: 1
    max: 20
  classifier_optimizer.lr:
    distribution: log_uniform_values
    min: 1e-05
    max: 0.01
  classifier_optimizer.beta1:
    distribution: uniform
    min: 0.8
    max: 0.999
  classifier_optimizer.beta2:
    distribution: uniform
    min: 0.98
    max: 0.999
  data.batch_size:
    values: [8, 16, 32]
